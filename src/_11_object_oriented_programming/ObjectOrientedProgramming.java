package _11_object_oriented_programming;

public class ObjectOrientedProgramming {
    public static void main(String[] args) {
        /**
         1. 객체란?
            세상에 존재하는 모든 것을 뜻하며, 프로그래밍에서 속성과 기능을 가지는 프로그램 단위

            객체(인간 세계)
                사람 - 속성 : 키, 몸무게 & 기능 : 의사
                체중계 - 속성 : 바늘, 눈금 & 기능 : 몸무게 측정
                자전거 - 속성 : 바퀴, 체인 & 기능 : 이동수단
                TV - 속성 : 채널, 사운드 & 기능 : 미디어 방출
                승용차 - 속성 : 바퀴, 엔진 & 기능 : 이동수단

            객체(프로그램)
                날씨 프로그램 - 속성 : 온도, 미세먼지 & 기능 : 날씨 예보
                사칙연산 프로그램 - 속성 : +, -, *, / & 기능 : 연산 기능

         2. 클래스란?
            객체를 생성하기 위한 설계도로, 모든 객체는 클래스로부터 생성된다.

            * 그랜저 --> 설계도
                속성 : 색상, 바퀴
                기능 : 배기량
            복제 ▶ 1) 그랜저 A : 색상(검정), 바퀴(일반), 배기량(2000cc)
            복제 ▶ 2) 그랜저 B : 색상(흰색), 바퀴(광폭), 배기량(2500cc)
            복제 ▶ 3) 그랜저 C : 색상(회색), 바퀴(일반), 배기량(3000cc)

         클래스를 만들어 놓으면, 필요에 따라서 만들어 놓은 클래스로부터 객체를 생성할 수 있다.
         * Garbage Collector(GC)는 사용되고 있지 않는 객체를 제거하여 불필요한 메모리 사용량을 줄이는 기능을 한다.

         3. 클래스 구성 요소
            클래스는 속성(멤버 변수)와 기능(메서드)로 구성된다.

         예) 자전거
            - 속성(멤버 변수) : 안장, 핸들, 바구니, 기어, 페달, 바퀴
            - 기능(메서드) : 기어 변속, 가속, 브레이크

         객체 지향 프로그래밍으로 프로그램을 만들면 확장성이 굉장히 좋아진다.
         이미 만들어진 프로그램의 기능을 활용하여 새로운 기능의 프로그램을 만들어 낼 수 있기 때문.
         */
    }
}